package musicapp;

import javax.swing.JOptionPane;

public class MusicAppGUI extends javax.swing.JFrame {
    
    MyStack likedSongStack;
    SLList popList;
    SLList hipHopList;
    SLList edmList;
    StringBuffer sb;
    Node aNode;
    
    public MusicAppGUI() {
        initComponents();
        likedSongStack = new MyStack();
        popList = new SLList();
        hipHopList = new SLList();
        edmList = new SLList();
        sb = new StringBuffer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        addSongPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addSongNameTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addSongBtn = new javax.swing.JButton();
        searchTf = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        viewSongPanel = new javax.swing.JPanel();
        viewPlaylistBtn = new javax.swing.JButton();
        viewPlaylistField = new javax.swing.JComboBox<>();
        countPlaylistSongsBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewListArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        moveSongTitleLbl = new javax.swing.JLabel();
        latestSongLbl = new javax.swing.JLabel();
        moveSongField = new javax.swing.JComboBox<>();
        moveSong = new javax.swing.JButton();
        searchSongPlaylistField = new javax.swing.JComboBox<>();
        deleteSongPlaylistField = new javax.swing.JComboBox<>();
        deleteSongTf = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        repeatSongPlaylistField = new javax.swing.JComboBox<>();
        repeatBtn = new javax.swing.JButton();
        moveSongGenreBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setText("Music Manager");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 6, -1, -1));

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 90, -1, -1));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Add a Song you liked!");

        addSongNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongNameTfActionPerformed(evt);
            }
        });

        jLabel3.setText("Name:");

        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setText("*");

        addSongBtn.setText("Add Song");
        addSongBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addSongBtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addSongNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSongNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addSongBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchBtn.setText("Search by name");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        viewSongPanel.setBackground(new java.awt.Color(204, 204, 204));

        viewPlaylistBtn.setText("View Selected Playlist");
        viewPlaylistBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPlaylistBtnActionPerformed(evt);
            }
        });

        viewPlaylistField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liked Songs Playlist", "Pop List", "Hip Hop List", "EDM List" }));

        countPlaylistSongsBtn.setText("Count Number of Songs");
        countPlaylistSongsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countPlaylistSongsBtnActionPerformed(evt);
            }
        });

        viewListArea.setEditable(false);
        viewListArea.setColumns(20);
        viewListArea.setRows(5);
        jScrollPane1.setViewportView(viewListArea);

        javax.swing.GroupLayout viewSongPanelLayout = new javax.swing.GroupLayout(viewSongPanel);
        viewSongPanel.setLayout(viewSongPanelLayout);
        viewSongPanelLayout.setHorizontalGroup(
            viewSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSongPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(viewSongPanelLayout.createSequentialGroup()
                        .addComponent(viewPlaylistBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(countPlaylistSongsBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        viewSongPanelLayout.setVerticalGroup(
            viewSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSongPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(viewSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewPlaylistBtn)
                    .addComponent(countPlaylistSongsBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addGap(39, 39, 39))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        moveSongTitleLbl.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        moveSongTitleLbl.setText("Move your latest liked song to a genre");

        latestSongLbl.setText("you currently have no songs to move");

        moveSongField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pop", "Hip Hop", "EDM" }));

        moveSong.setText("Move");
        moveSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveSongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(moveSong)
                    .addComponent(moveSongTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latestSongLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moveSongField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(moveSongTitleLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(latestSongLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(moveSongField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(moveSong)
                .addContainerGap())
        );

        searchSongPlaylistField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liked Songs", "Pop", "Hip Hop", "EDM" }));

        deleteSongPlaylistField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liked Songs", "Pop", "Hip Hop", "EDM" }));

        deleteBtn.setText("Delete by name");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        repeatSongPlaylistField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liked Songs", "Pop", "Hip Hop", "EDM" }));

        repeatBtn.setText("Set playlist to repeat");
        repeatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatBtnActionPerformed(evt);
            }
        });

        moveSongGenreBtn.setText("Move a Song from a Genre");
        moveSongGenreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveSongGenreBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addSongPanelLayout = new javax.swing.GroupLayout(addSongPanel);
        addSongPanel.setLayout(addSongPanelLayout);
        addSongPanelLayout.setHorizontalGroup(
            addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSongPanelLayout.createSequentialGroup()
                .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(viewSongPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(searchSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchBtn))
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(deleteSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteSongTf, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn))
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(repeatSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(repeatBtn))
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(moveSongGenreBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addSongPanelLayout.setVerticalGroup(
            addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSongPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewSongPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addSongPanelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSongTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addSongPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repeatSongPlaylistField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(repeatBtn))
                .addGap(18, 18, 18)
                .addComponent(moveSongGenreBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
            .addComponent(addSongPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSongPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addSongNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addSongNameTfActionPerformed
    
    private void addSongBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongBtnActionPerformed
        String name = addSongNameTf.getText();
        Song mySong = new Song(name);
        likedSongStack.push(mySong);
        JOptionPane.showMessageDialog(null,mySong.getName() + " has been added to your liked songs");
        updateLatestSongLbl();
    }//GEN-LAST:event_addSongBtnActionPerformed

    private void viewPlaylistBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPlaylistBtnActionPerformed
        String selectedPlaylist = (String) viewPlaylistField.getSelectedItem();
        switch(selectedPlaylist){
            case "Liked Songs Playlist":
                viewListArea.setText(listOutElements(likedSongStack));
                break;
            case "Pop List":
                viewListArea.setText(listOutElements(popList));
                break;
            case "Hip Hop List":
                viewListArea.setText(listOutElements(hipHopList));
                break;
            case "EDM List":
                viewListArea.setText(listOutElements(edmList));
                break;
        }
    }//GEN-LAST:event_viewPlaylistBtnActionPerformed

    // returns a string nicely formatted to be displayed on text area
    public String listOutElements(MyStack aStack){
        sb = new StringBuffer();
        for (int i = 0; i < aStack.size(); i++){
            Song aSong = (Song) aStack.get(i);
            if(aSong != null) sb.append(aSong.getName()+"\n");
        }
        return sb.toString();
    }
    public String listOutElements(SLList aList){
        sb = new StringBuffer();
        for (int i = 1; i < aList.size()+1; i++){
            Song aSong = (Song) aList.get(i);
            sb.append(aSong.getName()+"\n");
        }
        return sb.toString();
    }
    private void countPlaylistSongsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countPlaylistSongsBtnActionPerformed
        String selectedPlaylist = (String) viewPlaylistField.getSelectedItem();
        switch(selectedPlaylist){
            case "Liked Songs Playlist":
                JOptionPane.showMessageDialog(null,"Number of songs in the selected playlist: " + likedSongStack.size());
                break;
            case "Pop List":
                JOptionPane.showMessageDialog(null,"Number of songs in the selected playlist: " + popList.size());
                break;
            case "Hip Hop List":
                JOptionPane.showMessageDialog(null,"Number of songs in the selected playlist: " + hipHopList.size());
                break;
            case "EDM List":
                JOptionPane.showMessageDialog(null,"Number of songs in the selected playlist: " + edmList.size());
                break;
            default:
                JOptionPane.showMessageDialog(null, "Sorry, an error occurred when counting number of songs in the playlist");
        }        
    }//GEN-LAST:event_countPlaylistSongsBtnActionPerformed

    private void moveSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveSongActionPerformed
        Song songToMove = null;
        String genre = (String)moveSongField.getSelectedItem();
        songToMove = (Song)likedSongStack.pop();
        if (songToMove != null){
            switch(genre){
                case "Pop":
                    popList.add(songToMove);
                    break;
                case "Hip Hop":
                    hipHopList.add(songToMove);
                    break;
                case "EDM":
                    edmList.add(songToMove);
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Sorry, an unexpected error occurred when moving song");
            }
            updateLatestSongLbl();
        }
    }//GEN-LAST:event_moveSongActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        String searchTerm = searchTf.getText();
        int searchListIndex = searchSongPlaylistField.getSelectedIndex();
        
        switch(searchListIndex){
            case 0:
                likedSongStack.search(searchTerm);
                break;
            case 1:
                popList.search(searchTerm);
                break;
            case 2:
                hipHopList.search(searchTerm);
                break;
            case 3:
                edmList.search(searchTerm);
                break;
        }
        
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String deleteTerm = " ";
        deleteTerm = deleteSongTf.getText();
        int deleteSource = deleteSongPlaylistField.getSelectedIndex();
        switch(deleteSource){
            case 0:
                likedSongStack.delete(deleteTerm);
                break;
            case 1:
                popList.delete(deleteTerm);
                break;
            case 2:
                hipHopList.delete(deleteTerm);
                break;
            case 3:
                edmList.delete(deleteTerm);
                break;
            default:
                JOptionPane.showMessageDialog(null, "An unexpected error occurred when deleting the song");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void repeatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatBtnActionPerformed
        int repeatSource = repeatSongPlaylistField.getSelectedIndex();
        int repeatCount = Integer.parseInt(JOptionPane.showInputDialog(null, "How many times would you like to repeat"));
        viewListArea.setText("");
        switch(repeatSource){
            case 0:
                for(int i = 0; i<repeatCount; i++){
                    viewListArea.append(listOutElements(likedSongStack));
                }
                break;
            case 1:
                for(int i = 0; i<repeatCount; i++){
                    viewListArea.append(listOutElements(popList));
                }
                break;
            case 2:
                for(int i = 0; i<repeatCount; i++){
                    viewListArea.append(listOutElements(hipHopList));
                }
            case 3:
                for(int i = 0; i<repeatCount; i++){
                    viewListArea.append(listOutElements(edmList));
                }
                break;
            default:
                JOptionPane.showMessageDialog(null, "Sorry, an unexpected error occurred, please also ensure you enter a valid number");
        }
    }//GEN-LAST:event_repeatBtnActionPerformed

    private void moveSongGenreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveSongGenreBtnActionPerformed
        String songName = JOptionPane.showInputDialog(null, "Enter the name of the Song you would like to move");
        int sourceList = Integer.parseInt(JOptionPane.showInputDialog(null, "What is the Current location of your song?(Only enter the number)\n 1. Pop List \n2. Hip Hop List \n3.EDM List"));
        int destinationList = Integer.parseInt(JOptionPane.showInputDialog(null, "Lastly, where would you like to move it to?(Only enter the number)\n 1. Pop List \n2. Hip Hop List \n3.EDM List"));
        Song mySong = null;
        
        switch(sourceList){
            case 1:
                mySong = (Song)popList.findAndRemove(songName);
                break;
            case 2:
                mySong = (Song)hipHopList.findAndRemove(songName);
                break;
            case 3:
                mySong = (Song)edmList.findAndRemove(songName);
                break;
            default:
                JOptionPane.showMessageDialog(null,"Error in selecting source playlist");
                break;
        }
        
        switch(destinationList){
            case 1:
                popList.add(mySong);
                JOptionPane.showMessageDialog(null, "Song moved successfully");
                break;
            case 2:
                hipHopList.add(mySong);
                JOptionPane.showMessageDialog(null, "Song moved successfully");
                break;
            case 3:
                edmList.add(mySong);
                JOptionPane.showMessageDialog(null, "Song moved successfully");                
                break;
            default:
                JOptionPane.showMessageDialog(null, "Error when adding song to destination");
        }
    }//GEN-LAST:event_moveSongGenreBtnActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MusicAppGUI().setVisible(true);
            }
        });
    }
    
    public void updateLatestSongLbl(){
        Song mySong = (Song)likedSongStack.peek();
        if(mySong!=null){
            latestSongLbl.setText(mySong.getName());
        }
        else{
            latestSongLbl.setText("No songs to move");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addSongBtn;
    private javax.swing.JTextField addSongNameTf;
    private javax.swing.JPanel addSongPanel;
    private javax.swing.JButton countPlaylistSongsBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JComboBox<String> deleteSongPlaylistField;
    private javax.swing.JTextField deleteSongTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel latestSongLbl;
    private javax.swing.JButton moveSong;
    private javax.swing.JComboBox<String> moveSongField;
    private javax.swing.JButton moveSongGenreBtn;
    private javax.swing.JLabel moveSongTitleLbl;
    private javax.swing.JButton repeatBtn;
    private javax.swing.JComboBox<String> repeatSongPlaylistField;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> searchSongPlaylistField;
    private javax.swing.JTextField searchTf;
    private javax.swing.JTextArea viewListArea;
    private javax.swing.JButton viewPlaylistBtn;
    private javax.swing.JComboBox<String> viewPlaylistField;
    private javax.swing.JPanel viewSongPanel;
    // End of variables declaration//GEN-END:variables
}
